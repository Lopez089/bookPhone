{"version":3,"sources":["service/phones.js","components/filter.js","components/personForm.js","components/person.js","components/message.js","App.js","index.js"],"names":["url","getAll","axios","get","Filter","handleOnChage","onChange","PersonForm","handleOnChageName","handleOnChageNumber","handleSubmit","type","onClick","e","Person","person","handleDelete","name","number","id","Message","message","status","className","App","useState","persons","setPersons","newName","setNewName","newPhoneNumber","setPhoneNumber","filterName","setFilterName","setMessage","useEffect","then","res","data","confirmUser","window","confirm","newObjName","filter","delete","deletePhone","setTimeout","catch","error","console","target","value","preventDefault","maxId","Math","max","map","newObjeName","some","idUser","find","put","updatePhone","newobjePersons","concat","post","create","filterPerson","RegExp","test","filterPersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEMA,EAAM,gBAECC,EAAS,kBAAMC,IAAMC,IAAIH,I,OCIvBI,EARA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAChB,OACE,qDACoB,uBAAOC,SAAUD,QCmBxBE,EAtBE,SAAC,GAIX,IAHLC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,aAEA,OACE,iCACE,yCACQ,uBAAOJ,SAAUE,OAEzB,kDACiB,uBAAOF,SAAUG,OAElC,8BACE,wBAAQE,KAAK,SAASC,QAAS,SAACC,GAAD,OAAOH,EAAaG,IAAnD,uBCHKC,EAXA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACxB,OACE,qCACE,sCAAOD,EAAOE,KAAd,cAAwBF,EAAOG,UAC/B,wBAAQN,QAAS,kBAAMI,EAAaD,EAAOE,KAAMF,EAAOI,KAAxD,wBCQSC,EAVC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,GAAgB,OAAZA,EACF,OAAO,KAGT,IAAMC,EAAUD,EAAQC,OAAqB,QAAZ,UAEjC,OAAO,mBAAGC,UAAWD,EAAd,SAAuBD,EAAQA,WCgKzBG,EAjKH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGyBJ,mBAAS,IAHlC,mBAGTK,EAHS,KAGOC,EAHP,OAIoBN,mBAAS,IAJ7B,mBAITO,EAJS,KAIGC,EAJH,OAKcR,mBAAS,MALvB,mBAKTJ,EALS,KAKAa,EALA,KAOhBC,qBAAU,WACRlC,IAASmC,MAAK,SAACC,GAAD,OAASV,EAAWU,EAAIC,WACrC,IAEH,IA+EMtB,EAAe,SAACC,EAAME,GAC1B,IAAMoB,EAAcC,OAAOC,QAAP,wCAAgDxB,IAC9DyB,EAAahB,EAAQiB,QAAO,SAAC5B,GAAD,OAAYA,EAAOI,KAAOA,KAC5DQ,EAAWe,GAEPH,GL/FmB,SAACpB,GAAD,OAAQjB,IAAM0C,OAAN,UAAgB5C,GAAhB,OAAsBmB,IKgGnD0B,CAAY1B,GACTiB,MAAK,SAACC,GACU,MAAfA,EAAIf,QACAY,EAAW,CACTb,QAAQ,QAAD,OAAUJ,EAAV,6BACPK,OAAQ,OAIdwB,YAAW,WACTZ,EAAW,QACV,QAEJa,OAAM,SAACC,GACNC,QAAQD,MAAMA,GACdd,EAAW,CACTb,QAAQ,QAAD,OAAUJ,EAAV,qBACPK,OAAQ,UAGVwB,YAAW,WACTZ,EAAW,QACV,SAYX,OACE,sBAAKX,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAASF,QAASA,IAClB,cAAC,EAAD,CAAQhB,cAzHgB,SAACQ,GAAD,OAAOoB,EAAcpB,EAAEqC,OAAOC,UA0HtD,kDACA,cAAC,EAAD,CACE3C,kBA9HoB,SAACK,GAAD,OAAOgB,EAAWhB,EAAEqC,OAAOC,QA+H/C1C,oBA9HsB,SAACI,GAAD,OAAOkB,EAAelB,EAAEqC,OAAOC,QA+HrDzC,aA5He,SAACG,GACpBA,EAAEuC,iBAEF,IAAMC,EAAQC,KAAKC,IAAL,MAAAD,KAAI,YAAQ5B,EAAQ8B,KAAI,SAACzC,GAAD,OAAYA,EAAOI,QAEnDsC,EAAc,CAClBxC,KAAMW,EACNV,OAAQY,EACRX,GAAIkC,EAAQ,GAGd,GAAI3B,EAAQgC,MAAK,SAAC3C,GAAD,OAAYA,EAAOE,OAASwC,EAAYxC,QAAO,CAC9D,IAAMwB,EAAUD,OAAOC,QAAP,UACXgB,EAAYxC,KADD,0EAIV0C,EAASjC,EAAQkC,MAAK,SAAC7C,GAC3B,GAAIA,EAAOE,OAASwC,EAAYxC,KAC9B,OAAOF,EAAOI,MAIdsB,ILnCiB,SAACtB,EAAIsC,GAAL,OACzBvD,IAAM2D,IAAN,UAAa7D,GAAb,OAAmBmB,GAAMsC,GKmCnBK,CAAYH,EAAOxC,GAAR,YAAC,eAAgBsC,GAAjB,IAA8BtC,GAAIwC,EAAOxC,MACjDiB,MAAK,SAACC,GACU,MAAfA,EAAIf,QACAY,EAAW,CACTb,QAAQ,QAAD,OAAUsC,EAAO1C,KAAjB,kCACPK,OAAQ,OAIdwB,YAAW,WACTZ,EAAW,QACV,QAEJa,OAAM,SAACC,GACNC,QAAQD,MAAMA,GACdd,EAAW,CAAEb,QAAS,qBAAsBC,OAAQ,UAEpDwB,YAAW,WACTZ,EAAW,QACV,QAEPjC,IAASmC,MAAK,SAACC,GAAD,OAASV,EAAWU,EAAIC,cAEnC,CACL,IAAMyB,EAAc,YAAOrC,GAC3BC,EAAWoC,EAAeC,OAAOP,ILjEjB,SAACA,GAAD,OAAiBvD,IAAM+D,KAAKjE,EAAKyD,GKmEjDS,CAAOT,GACJrB,MAAK,SAACC,GACc,MAAfA,EAAIf,QACNY,EAAW,CACTb,QAAQ,gCACRC,OAAQ,OAIZwB,YAAW,WACTZ,EAAW,QACV,QAEJa,OAAM,SAACC,GACNC,QAAQD,MAAMA,GAEdd,EAAW,CAAEb,QAAS,kBAAmBC,OAAQ,UAEjDwB,YAAW,WACTZ,EAAW,QACV,YAwDP,yCACgB,KAAfF,EACGN,EAAQ8B,KAAI,SAACzC,GAAD,OACV,cAAC,EAAD,CACEA,OAAQA,EAERC,aAAcA,GADTD,EAAOI,OAvBF,SAACO,EAASyC,GAI9B,OAHsBzC,EAAQiB,QAAO,SAAC5B,GAAD,OACnC,IAAIqD,OAAOD,EAAc,KAAKE,KAAKtD,EAAOE,SAyBtCqD,CAAc5C,EAASM,GAAYwB,KAAI,SAACzC,GAAD,OACrC,cAAC,EAAD,CAEEA,OAAQA,EACRC,aAAcA,GAFTD,EAAOI,WC3J1BoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3b220060.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst url = \"/api/persons/\";\n\nexport const getAll = () => axios.get(url);\n\nexport const create = (newObjeName) => axios.post(url, newObjeName);\n\nexport const deletePhone = (id) => axios.delete(`${url}${id}`);\n\nexport const updatePhone = (id, newObjeName) =>\n  axios.put(`${url}${id}`, newObjeName);\n","const Filter = ({ handleOnChage }) => {\n  return (\n    <div>\n      Filter shown with <input onChange={handleOnChage} />\n    </div>\n  );\n};\n\nexport default Filter;\n","const PersonForm = ({\n    handleOnChageName,\n    handleOnChageNumber,\n    handleSubmit,\n  }) => {\n    return (\n      <form>\n        <div>\n          name: <input onChange={handleOnChageName} />\n        </div>\n        <div>\n          phone number : <input onChange={handleOnChageNumber} />\n        </div>\n        <div>\n          <button type=\"submit\" onClick={(e) => handleSubmit(e)}>\n            add\n          </button>\n        </div>\n      </form>\n    );\n  };\n\n  export default PersonForm","const Person = ({ person, handleDelete }) => {\n  return (\n    <>\n      <p>{`${person.name} | ${person.number}`}</p>\n      <button onClick={() => handleDelete(person.name, person.id)}>\n        delete\n      </button>\n    </>\n  );\n};\n\nexport default Person;\n","import \"../App.css\";\n\nconst Message = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  const status = !message.status ? \"message\" : \"error\";\n\n  return <p className={status}>{message.message}</p>;\n};\n\nexport default Message;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getAll, create, deletePhone, updatePhone } from \"./service/phones\";\nimport Filter from \"./components/filter\";\nimport PersonForm from \"./components/personForm\";\nimport Person from \"./components/person\";\nimport Message from \"./components/message\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhoneNumber, setPhoneNumber] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    getAll().then((res) => setPersons(res.data));\n  }, []);\n\n  const handleOnChageName = (e) => setNewName(e.target.value);\n  const handleOnChageNumber = (e) => setPhoneNumber(e.target.value);\n  const handleOnChageFilter = (e) => setFilterName(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const maxId = Math.max(...persons.map((person) => person.id));\n\n    const newObjeName = {\n      name: newName,\n      number: newPhoneNumber,\n      id: maxId + 1,\n    };\n\n    if (persons.some((person) => person.name === newObjeName.name)) {\n      const confirm = window.confirm(\n        `${newObjeName.name} is already added to phonebook, replace the old number with a new one`\n      );\n\n      const idUser = persons.find((person) => {\n        if (person.name === newObjeName.name) {\n          return person.id;\n        }\n      });\n\n      if (confirm) {\n        updatePhone(idUser.id, { ...newObjeName, id: idUser.id })\n          .then((res) => {\n            res.status === 200\n              ? setMessage({\n                  message: `User ${idUser.name} has been updated successfully`,\n                  status: null,\n                })\n              : null;\n\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n          })\n          .catch((error) => {\n            console.error(error);\n            setMessage({ message: \" can't update user\", status: \"error\" });\n\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n          });\n        getAll().then((res) => setPersons(res.data));\n      }\n    } else {\n      const newobjePersons = [...persons];\n      setPersons(newobjePersons.concat(newObjeName));\n\n      create(newObjeName)\n        .then((res) => {\n          if (res.status === 200) {\n            setMessage({\n              message: `the user  was added correctly`,\n              status: null,\n            });\n          }\n\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          console.error(error);\n\n          setMessage({ message: \" can't add user\", status: \"error\" });\n\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const handleDelete = (name, id) => {\n    const confirmUser = window.confirm(`Deseas eliminar de la lista a ${name}`);\n    const newObjName = persons.filter((person) => person.id !== id);\n    setPersons(newObjName);\n\n    if (confirmUser) {\n      deletePhone(id)\n        .then((res) => {\n          res.status === 204\n            ? setMessage({\n                message: `User ${name} was successfully removed`,\n                status: null,\n              })\n            : null;\n\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          console.error(error);\n          setMessage({\n            message: `User ${name} canÂ´t removed`,\n            status: \"error\",\n          });\n\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const filterPersons = (persons, filterPerson) => {\n    const personsFilter = persons.filter((person) =>\n      new RegExp(filterPerson, \"i\").test(person.name)\n    );\n    return personsFilter;\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Phonebook</h2>\n      <Message message={message} />\n      <Filter handleOnChage={handleOnChageFilter} />\n      <h2>Add a new Person</h2>\n      <PersonForm\n        handleOnChageName={handleOnChageName}\n        handleOnChageNumber={handleOnChageNumber}\n        handleSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      {filterName === \"\"\n        ? persons.map((person) => (\n            <Person\n              person={person}\n              key={person.id}\n              handleDelete={handleDelete}\n            />\n          ))\n        : filterPersons(persons, filterName).map((person) => (\n            <Person\n              key={person.id}\n              person={person}\n              handleDelete={handleDelete}\n            />\n          ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}